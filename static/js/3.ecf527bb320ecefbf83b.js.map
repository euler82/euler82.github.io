{"version":3,"sources":["webpack:///static/js/3.ecf527bb320ecefbf83b.js","webpack:///./src/pages/Detail.vue","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/babel-runtime/helpers/asyncToGenerator.js","webpack:///./src/pages/Detail.vue?abd4","webpack:///./src/pages/Detail.vue?590a","webpack:///Detail.vue","webpack:///./src/pages/Detail.vue?1da5"],"names":["webpackJsonp","511","module","exports","__webpack_require__","injectStyle","ssrContext","Component","515","516","g","this","Function","hadRuntime","regeneratorRuntime","Object","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","517","global","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","prototype","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","obj","arg","type","call","err","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","AsyncIterator","invoke","resolve","reject","record","result","value","hasOwn","Promise","__await","then","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","state","GenStateSuspendedStart","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","done","GenStateSuspendedYield","iterator","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","length","i","Op","hasOwnProperty","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","518","__esModule","_promise","_promise2","default","gen","apply","arguments","step","error","523","content","locals","524","version","sources","names","mappings","file","sourcesContent","sourceRoot","525","_interopRequireDefault","defineProperty","_regenerator","_regenerator2","_asyncToGenerator2","_asyncToGenerator3","_extends2","_extends3","_vuex","methods","mapActions","asyncData","_this","_callee","_context","setTimeout","created","setAppHeader","show","title","showMenu","showBack","showLogo","actions","icon","route","hideBottomNav","526","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","grid-list-md","text-xs-center","row","xs10","offset-xs1","_v","_s","$route","params","id","to","Number","staticRenderFns"],"mappings":"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","file":"static/js/3.ecf527bb320ecefbf83b.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 511:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(523)\n}\nvar Component = __webpack_require__(34)(\n  /* script */\n  __webpack_require__(525),\n  /* template */\n  __webpack_require__(526),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-64dcb816\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 515:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(516);\n\n\n/***/ }),\n\n/***/ 516:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(517);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n/***/ }),\n\n/***/ 517:\n/***/ (function(module, exports) {\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n/***/ }),\n\n/***/ 518:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _promise = __webpack_require__(181);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new _promise2.default(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return _promise2.default.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\n/***/ }),\n\n/***/ 523:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(524);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(509)(\"667baa65\", content, true);\n\n/***/ }),\n\n/***/ 524:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(508)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".detail-content[data-v-64dcb816]{font-size:16px;line-height:30px;margin-top:30px}.detail-content .detail-title[data-v-64dcb816]{margin-bottom:20px;padding:10px 0;font-size:36px;font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"F:/PrivateWorkspace/PWA/Lavas/demo/src/pages/Detail.vue\"],\"names\":[],\"mappings\":\"AACA,iCACE,eAAgB,AAChB,iBAAkB,AAClB,eAAiB,CAClB,AACD,+CACE,mBAAoB,AACpB,eAAgB,AAChB,eAAgB,AAChB,eAAkB,CACnB\",\"file\":\"Detail.vue\",\"sourcesContent\":[\"\\n.detail-content[data-v-64dcb816] {\\n  font-size: 16px;\\n  line-height: 30px;\\n  margin-top: 30px;\\n}\\n.detail-content .detail-title[data-v-64dcb816] {\\n  margin-bottom: 20px;\\n  padding: 10px 0;\\n  font-size: 36px;\\n  font-weight: bold;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 525:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _regenerator = __webpack_require__(515);\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _promise = __webpack_require__(181);\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _asyncToGenerator2 = __webpack_require__(518);\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _extends2 = __webpack_require__(55);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(56);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n    name: 'detail',\n    methods: (0, _extends3.default)({}, (0, _vuex.mapActions)('appShell/appHeader', ['setAppHeader']), (0, _vuex.mapActions)('appShell/appBottomNavigator', ['hideBottomNav'])),\n    asyncData: function asyncData() {\n        var _this = this;\n\n        return (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {\n            return _regenerator2.default.wrap(function _callee$(_context) {\n                while (1) {\n                    switch (_context.prev = _context.next) {\n                        case 0:\n                            _context.next = 2;\n                            return new _promise2.default(function (resolve, reject) {\n                                setTimeout(resolve, 500);\n                            });\n\n                        case 2:\n                        case 'end':\n                            return _context.stop();\n                    }\n                }\n            }, _callee, _this);\n        }))();\n    },\n    created: function created() {\n        this.setAppHeader({\n            show: true,\n            title: 'Lavas',\n            showMenu: false,\n            showBack: true,\n            showLogo: false,\n            actions: [{\n                icon: 'home',\n                route: {\n                    name: 'home'\n                }\n            }]\n        });\n        this.hideBottomNav();\n    }\n};\n'filehash /bKLnj9KOGH+gZpH8z2EFdyE5rQ=';\n\n/***/ }),\n\n/***/ 526:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"detail-wrapper\"\n  }, [_c('v-container', {\n    attrs: {\n      \"grid-list-md\": \"\",\n      \"text-xs-center\": \"\"\n    }\n  }, [_c('v-layout', {\n    attrs: {\n      \"row\": \"\",\n      \"wrap\": \"\"\n    }\n  }, [_c('v-flex', {\n    attrs: {\n      \"xs10\": \"\",\n      \"offset-xs1\": \"\"\n    }\n  }, [_c('article', {\n    staticClass: \"detail-content text-xs-center\"\n  }, [_c('header', {\n    staticClass: \"detail-title text-xs-center\"\n  }, [_vm._v(\"\\n                        Detail \" + _vm._s(_vm.$route.params.id) + \"\\n                    \")]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": {\n        name: 'detail',\n        params: {\n          id: Number(_vm.$route.params.id) + 1\n        }\n      }\n    }\n  }, [_vm._v(\"\\n                        Detail \" + _vm._s(Number(_vm.$route.params.id) + 1) + \"\\n                    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"\\n                    Progressive Web Apps are user experiences that have the reach of the web, and are:\\nReliable - Load instantly and never show the downasaur, even in uncertain network conditions.\\nFast - Respond quickly to user interactions with silky smooth animations and no janky scrolling.\\n                    \")])], 1)])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.ecf527bb320ecefbf83b.js","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-64dcb816\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!../../build/loaders/theme-loader.js??ref--2-1!./Detail.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!../../build/loaders/theme-loader.js??ref--2-1!./Detail.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-64dcb816\\\",\\\"hasScoped\\\":true}!../../node_modules/vue-loader/lib/selector?type=template&index=0!../../build/loaders/theme-loader.js??ref--2-1!./Detail.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-64dcb816\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Detail.vue\n// module id = 511\n// module chunks = 3","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 515\n// module chunks = 0 1 2 3","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = 516\n// module chunks = 0 1 2 3","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = 517\n// module chunks = 0 1 2 3","\"use strict\";\n\nexports.__esModule = true;\n\nvar _promise = require(\"../core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new _promise2.default(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return _promise2.default.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/asyncToGenerator.js\n// module id = 518\n// module chunks = 0 1 2 3","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-64dcb816\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/stylus-loader/index.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!../../build/loaders/theme-loader.js?{\\\"injectInVueFile\\\":true}!./Detail.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"667baa65\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-64dcb816\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/stylus-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./build/loaders/theme-loader.js?{\"injectInVueFile\":true}!./src/pages/Detail.vue\n// module id = 523\n// module chunks = 3","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".detail-content[data-v-64dcb816]{font-size:16px;line-height:30px;margin-top:30px}.detail-content .detail-title[data-v-64dcb816]{margin-bottom:20px;padding:10px 0;font-size:36px;font-weight:700}\", \"\", {\"version\":3,\"sources\":[\"F:/PrivateWorkspace/PWA/Lavas/demo/src/pages/Detail.vue\"],\"names\":[],\"mappings\":\"AACA,iCACE,eAAgB,AAChB,iBAAkB,AAClB,eAAiB,CAClB,AACD,+CACE,mBAAoB,AACpB,eAAgB,AAChB,eAAgB,AAChB,eAAkB,CACnB\",\"file\":\"Detail.vue\",\"sourcesContent\":[\"\\n.detail-content[data-v-64dcb816] {\\n  font-size: 16px;\\n  line-height: 30px;\\n  margin-top: 30px;\\n}\\n.detail-content .detail-title[data-v-64dcb816] {\\n  margin-bottom: 20px;\\n  padding: 10px 0;\\n  font-size: 36px;\\n  font-weight: bold;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-64dcb816\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/stylus-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./build/loaders/theme-loader.js?{\"injectInVueFile\":true}!./src/pages/Detail.vue\n// module id = 524\n// module chunks = 3","<template>\r\n    <div class=\"detail-wrapper\">\r\n        <v-container grid-list-md text-xs-center>\r\n            <v-layout row wrap>\r\n                <v-flex xs10 offset-xs1>\r\n                    <article class=\"detail-content text-xs-center\">\r\n                        <header class=\"detail-title text-xs-center\">\r\n                            Detail {{$route.params.id}}\r\n                        </header>\r\n                        <router-link :to=\"{\r\n                            name: 'detail',\r\n                            params: {\r\n                                id: Number($route.params.id) + 1\r\n                            }\r\n                        }\">\r\n                            Detail {{Number($route.params.id) + 1}}\r\n                        </router-link>\r\n                        <p>\r\n                        Progressive Web Apps are user experiences that have the reach of the web, and are:\r\n    Reliable - Load instantly and never show the downasaur, even in uncertain network conditions.\r\n    Fast - Respond quickly to user interactions with silky smooth animations and no janky scrolling.\r\n                        </p>\r\n                    </article>\r\n                </v-flex>\r\n            </v-layout>\r\n         </v-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions} from 'vuex';\r\n\r\nexport default {\r\n    name: 'detail',\r\n    methods: {\r\n        ...mapActions('appShell/appHeader', [\r\n            'setAppHeader'\r\n        ]),\r\n        ...mapActions('appShell/appBottomNavigator', [\r\n            'hideBottomNav'\r\n        ])\r\n    },\r\n    async asyncData() {\r\n        await new Promise((resolve, reject) => {\r\n            setTimeout(resolve, 500);\r\n        });\r\n    },\r\n    created() {\r\n        this.setAppHeader({\r\n            show: true,\r\n            title: 'Lavas',\r\n            showMenu: false,\r\n            showBack: true,\r\n            showLogo: false,\r\n            actions: [\r\n                {\r\n                    icon: 'home',\r\n                    route: {\r\n                        name: 'home'\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        this.hideBottomNav();\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\n    @import '~@/assets/styles/variables';\n    @import '~vuetify/src/stylus/settings/_colors';\n\n    $theme := {\n        primary: rgb(40, 116, 240)\n        accent: $blue.accent-2\n        secondary: $grey.darken-3\n        info: $blue.base\n        warning: $amber.base\n        error: $red.accent-2\n        success: $green.base\n    }\n\n    $material-custom := {\n        bg-color: #fff\n        fg-color: #000\n        text-color: #000\n        primary-text-percent: 0.87\n        secondary-text-percent: 0.54\n        disabledORhints-text-percent: 0.38\n        divider-percent: 0.12\n        active-icon-percent: 0.54\n        inactive-icon-percent: 0.38\n    }\n    $material-theme := $material-custom\n\r\n\r\n.detail-content\r\n    font-size 16px\r\n    line-height 30px\r\n    margin-top 30px\r\n\r\n    .detail-title\r\n        margin-bottom 20px\r\n        padding 10px 0\r\n        font-size 36px\r\n        font-weight bold\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Detail.vue?73d0ed44","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"detail-wrapper\"\n  }, [_c('v-container', {\n    attrs: {\n      \"grid-list-md\": \"\",\n      \"text-xs-center\": \"\"\n    }\n  }, [_c('v-layout', {\n    attrs: {\n      \"row\": \"\",\n      \"wrap\": \"\"\n    }\n  }, [_c('v-flex', {\n    attrs: {\n      \"xs10\": \"\",\n      \"offset-xs1\": \"\"\n    }\n  }, [_c('article', {\n    staticClass: \"detail-content text-xs-center\"\n  }, [_c('header', {\n    staticClass: \"detail-title text-xs-center\"\n  }, [_vm._v(\"\\n                        Detail \" + _vm._s(_vm.$route.params.id) + \"\\n                    \")]), _vm._v(\" \"), _c('router-link', {\n    attrs: {\n      \"to\": {\n        name: 'detail',\n        params: {\n          id: Number(_vm.$route.params.id) + 1\n        }\n      }\n    }\n  }, [_vm._v(\"\\n                        Detail \" + _vm._s(Number(_vm.$route.params.id) + 1) + \"\\n                    \")]), _vm._v(\" \"), _c('p', [_vm._v(\"\\n                    Progressive Web Apps are user experiences that have the reach of the web, and are:\\nReliable - Load instantly and never show the downasaur, even in uncertain network conditions.\\nFast - Respond quickly to user interactions with silky smooth animations and no janky scrolling.\\n                    \")])], 1)])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-64dcb816\",\"hasScoped\":true}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./build/loaders/theme-loader.js?{\"injectInVueFile\":true}!./src/pages/Detail.vue\n// module id = 526\n// module chunks = 3"],"sourceRoot":""}